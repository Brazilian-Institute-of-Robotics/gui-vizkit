#! /usr/bin/env ruby

require 'vizkit'
require 'orocos'
require 'optparse'
require 'rock/bundle'

@show_all = false
@proxy = true
@clean = true
Bundles.public_logs = false 

parser = OptionParser.new do |opt|
    opt.banner = "rock-display [--host hostname] task_name[.port_name] [task_name[.port_name]]"
    opt.on('--host=HOSTNAME', String, "the corba nameserver we should contact") do |name|
        Orocos::CORBA.name_service = name
    end
    opt.on('-a','--all',"Display all tasks") do
        @show_all = true
    end
    opt.on('--noproxy',"Do not use a port proxy between the task inspector and other orocos tasks") do
        @proxy = false
    end
    opt.on('--debug',"Show debug information") do
        Vizkit.logger.level = Logger::INFO
        Bundles.public_logs = true
    end
    opt.on('-c','--noclean',"Does not removes dangling corba tasks from the name service.") do
        @clean = false
    end
    opt.on('--help') do
        puts parser
        exit 0
    end
end

def corba_error
    Vizkit.error "Corba error. Maybe Orocos is not initialized"
    Vizkit.error "or the corba name service is answering on a wrong network interface."
    Vizkit.error "Try to reset the nameserver and to disable all virtual network interfaces."
end


remaining = parser.parse(ARGV)
task_inspector = nil
widget = nil

begin
    Bundles.initialize
    Orocos::CORBA.cleanup if @clean
rescue Orocos::CORBAError => e
    Vizkit.error "Corba name service is not answering. Cannot start rock-display."
    Vizkit.error ""
    corba_error
    exit 1
end

Orocos::CORBA.call_timeout = 3000
Orocos::CORBA.connect_timeout = 500
Vizkit::ReaderWriterProxy.default_policy[:port_proxy] = nil if !@proxy

if remaining.empty?
  @timer = Qt::Timer.new
  task_inspector ||= Vizkit.default_loader.TaskInspector
  raise "Cannot find plugin TaskInspector" unless task_inspector

  task_inspector.enable_tooling=@show_all

  #check for new tasks every 5 seconds 
  refresh = Proc.new do 
      begin
      Orocos.task_names.dup.each do |name|
          task_inspector.config(name,:cleanup_nameservice =>@clean)
      end
      rescue Orocos::CORBAError => e
          Vizkit.error "Corba name service is not answering. Cannot update display. ... keep on trying "
          Vizkit.error ""
          corba_error
      end
  end
  @timer.connect SIGNAL('timeout()') do 
      refresh.call
  end
  refresh.call
  @timer.start(5000)
else
    remaining.each do |spec|
        task_name, port_name = spec.split('.')
        task = Vizkit::TaskProxy.new task_name
        if !port_name || !task.ping
            task_inspector ||= Vizkit.default_loader.TaskInspector
            task_inspector.config(task)
        else
            widget = Vizkit.default_loader.create_plugin_for(task.port(port_name),:display,nil,true)
            if widget
                Vizkit.connect_port_to task_name,port_name,widget
                widget.show
            else
                Vizkit.warn "Cannot find a display widget for #{port_name}"
            end
        end
    end
    task_inspector.force_update = true if task_inspector
end

if task_inspector
    task_inspector.show
elsif !widget
    puts parser
    exit 1
end
Vizkit.exec

